// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique @db.VarChar(100)
  password  String   @db.VarChar(20)
  token     String?  @db.VarChar(100)
  profile   Profile?
  posts     Post[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Profile {
  id        String  @id @default(uuid())
  name      String  @db.VarChar(100)
  alamat    String  @db.VarChar(100)
  bio       String  @db.VarChar(255)
  avatarUrl String?
  userId    String  @unique
  user      User    @relation(fields: [userId], references: [id])

  @@map("profile")
}

model Post {
  id         String    @id @default(uuid())
  title      String    @db.VarChar(255)
  content    String    @db.Text
  authorId   String
  author     User      @relation(fields: [authorId], references: [id])
  categoryId String
  category   Category  @relation(fields: [categoryId], references: [id])
  comments   Comment[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  @@map("posts")
}

model Category {
  id    String @id @default(uuid())
  name  String @db.VarChar(100)
  posts Post[]

  @@map("categories")
}

model Comment {
  id        String   @id @default(uuid())
  content   String   @db.Text
  postId    String
  post      Post     @relation(fields: [postId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("comments")
}
